doctype html
html
    head
        title= title
        link(href='/bootstrap.min.css', rel='stylesheet')
        link(href='/bootstrap-theme.min.css', rel='stylesheet')
        link(href='/stylesheet.css', rel='stylesheet')
        script(src='//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js')
        script(src='//ajax.googleapis.com/ajax/libs/angularjs/1.2.12/angular.min.js')
        script(src='/bootstrap.min.js')
        script(src='/shotgun/shotgun.client.js')
        script.

            // JQuery DOM Ready function.
            $(function () {
                // Manually invoke the shotgunConsole plugin on the first two shell consoles.
                $('#shell1').shotgunConsole({ namespace: 'shell1' }).execute('intro');
                $('#shell2').shotgunConsole({ namespace: 'shell2' }).execute('intro');

                // Shells 3 and 4 are rendered with the AngularJS adapter.
                // Shell 4 shows off some additional functionality with the Angular
                // contoller below.
            });

            // AngularJS Controller that controls shell4.
            function ExampleCtrl($scope) {
                // Wait for shell4 to be added to the scope.
                var unwatch = $scope.$watch($scope.shotgunShells.shell4, function () {
                    // Once shell4 is available we no longer need to watch the scope.
                    unwatch();
                    // Get reference to shell4.
                    var clientShell = $scope.shotgunShells.shell4;
                    // Listen for our custom event.
                    clientShell.on('showAlert', function (message) {
                        // Put alert logic inside a function.
                        function doAlert () {
                            // Show alert.
                            alert(message);
                            // Invoke the callback to let our module know the alert was closed.
                            clientShell.socket.emit('alertClosed');
                        }
                        // Check if the jquery console is still processing text.
                        if (clientShell.ui.$display.data('processingQueue'))
                            // If it is, attach a one time event handler that will fire
                            // when the queue is finished.
                            clientShell.ui.$display.one('queueFinished', doAlert);
                        else
                            // Otherwise simply invoke doAlert.
                            doAlert();
                    });
                });
            }

    body(ng-app="shotgun")
        div.container
            h2(style="text-align: center;") Welcome to the shotgun web console example application!
            div.row
                div.col-lg-6
                    h3.green shell1 (JQuery Plugin):
                    div#shell1.console.green
                div.col-lg-6
                    h3.yellow shell2 (JQuery Plugin):
                    div#shell2.console.yellow
                div.col-lg-6
                    h3.cyan shell3 (AngularJS Directive):
                    shotgun-console(namespace="shell3", execute="intro")#shell3.console.cyan
                div.col-lg-6(ng-controller="ExampleCtrl")
                    h3.red shell4 (AngularJS Directive):
                    shotgun-console(namespace="shell4", execute="intro")#shell4.console.red



// The above markup looks like this when rendered:
    <body ng-app="shotgun">
        <div class="container">
            <h2 style="text-align: center;">Welcome to the shotgun web console example application!</h2>
            <div class="row">
                <div class="col-lg-6">
                    <h3 class="green">shell1 (JQuery Plugin):<h3>
                    <div id="shell1" class="console green"></div>
                </div>
                <div class="col-lg-6">
                    <h3 class="yellow">shell2 (JQuery Plugin):</h3>
                    <div id="shell2" class="console yellow"></div>
                </div>
                <div class="col-lg-6">
                    <h3 class="cyan">shell3 (AngularJS Directive):</h3>
                    <shotgun-console id="shell3" class="console cyan" namespace="shell3" execute="intro" />
                </div>
                <div class="col-lg-6" ng-controller="ExampleCtrl">
                    <h3 class="red">shell4 (AngularJS Directive):</h3>
                    <shotgun-console id="shell4" class="console red" namespace="shell4" execute="intro" />
                </div>
            </div>
        </div>
    </body>
